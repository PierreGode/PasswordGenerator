name: Windows Package Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wheel pyinstaller
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build package
      run: |
        python setup.py sdist bdist_wheel

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed PasswordGenerator.py

    - name: Generate Self-Signed Certificate
      env:
        CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
      run: |
        $dnsName = "local.test" # or use ${{ secrets.CERT_DNS_NAME }} if you've set that secret
        $pwd = ConvertTo-SecureString -String $Env:CERT_PASSWORD -Force -AsPlainText
        $cert = New-SelfSignedCertificate -DnsName $dnsName -CertStoreLocation "cert:\LocalMachine\My" -KeySpec Signature
        Export-PfxCertificate -Cert $cert -FilePath ".\certificate.pfx" -Password $pwd

    - name: Sign the Executable
      env:
        CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
      run: |
        $Env:SIGNTOOL_PATH = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64"
        & "$Env:SIGNTOOL_PATH\signtool.exe" sign /f ".\certificate.pfx" /p $Env:CERT_PASSWORD /tr http://timestamp.digicert.com /td sha256 /fd sha256 /a ".\dist\PasswordGenerator.exe"

    - name: Upload Signed Executable Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: signed-windows-executable
        path: dist/*.exe