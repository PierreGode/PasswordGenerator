# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# By Pierre Gode
name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # This is a placeholder for whatever steps you want to use to build/package your application
    - name: Build/package
      run: |
        # Your commands to build and/or package your application
        # For example, if you're creating a Python package:
        python setup.py sdist bdist_wheel
    # Upload the build artifacts
    - uses: actions/upload-artifact@v3
      with:
        name: packaged-application
        path: |
          dist/*
        if-no-files-found: error # 'warn' or 'error' are allowed here
#    - name: Test with pytest
#      run: |
#        pytest
